[project]
name = "groundedllm-hayhooks"
version = "0.1.0"
description = "Hayhooks"
readme = "README.md"
requires-python = "==3.12.*"
dependencies = [
    "exa-py>=1.13.1",
    "gdown>=5.2.0",
    "google-auth>=2.40.3",
    "google-auth-oauthlib>=1.2.0",
    "google-api-python-client>=2.173.0",
    "hayhooks[mcp]>=0.9.1",
    "haystack-ai>=2.14.1",
    "httpx[http2]>=0.27.0",
    "letta-client>=0.1.146",
    "linkup-sdk>=0.2.5",
    "markdown-it-py>=3.0.0",
    "mdit-plain>=1.0.1",
    "notion-haystack>=1.0.0",
    "pydantic-settings>=2.9.1",
    "pypdf>=5.5.0",
    "pytest-asyncio>=1.0.0",
    "pytest-integration-mark>=0.2.0",
    "python-docx>=1.1.2",
    "pyzotero>=1.6.11",
    "rich>=14.0.0",
    "tavily-python>=0.7.7",
    "trafilatura>=2.0.0",
    "youtube-transcript-api>=1.1.0",
    "github-haystack>=1.0.0",
    "scrapling>=0.2.99",
    "opentelemetry-sdk>=1.34.1",
    "opentelemetry-exporter-otlp>=1.34.1",
    "opentelemetry-instrumentation-openai>=0.40.11",
    "opentelemetry-instrumentation-urllib3==0.55b1",
    "opentelemetry-distro>=0.55b1",
    "opentelemetry-instrumentation-asyncio==0.55b1",
    "opentelemetry-instrumentation-dbapi==0.55b1",
    "opentelemetry-instrumentation-logging==0.55b1",
    "opentelemetry-instrumentation-sqlite3==0.55b1",
    "opentelemetry-instrumentation-threading==0.55b1",
    "opentelemetry-instrumentation-urllib==0.55b1",
    "opentelemetry-instrumentation-wsgi==0.55b1",
    "opentelemetry-instrumentation-openai-v2>=2.1b0",
    "opentelemetry-instrumentation-aiohttp-client==0.55b1",
    "opentelemetry-instrumentation-aiohttp-server==0.55b1",
    "opentelemetry-instrumentation-click==0.55b1",
    "opentelemetry-instrumentation-fastapi==0.55b1",
    "opentelemetry-instrumentation-grpc==0.55b1",
    "opentelemetry-instrumentation-httpx==0.55b1",
    "opentelemetry-instrumentation-jinja2==0.55b1",
    "opentelemetry-instrumentation-requests==0.55b1",
    "opentelemetry-instrumentation-starlette==0.55b1",
    "opentelemetry-instrumentation-tortoiseorm==0.55b1",
]

[tool.setuptools]
packages = ["components", "pipelines", "resources"]

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[dependency-groups]
dev = [
    "mypy>=1.15.0",
    "pre-commit>=4.2.0",
    "ruff>=0.11.11",
    "pytest>=8.3.5",
    "pytest-mock>=3.14"
]

[tool.ruff]
# https://docs.astral.sh/ruff/linter/#rule-selection
lint.select = [
    "E", # pycodestyle
    "F", # Pyflakes
    "I", # isort
    #"B",  # flake8-bugbear
    #"SIM", # flake8-simplify
]
line-length = 250

# To automatically remove unused imports when fixing
fix = true

[tool.ruff.lint.isort]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

# https://mypy.readthedocs.io/en/stable/config_file.html#example-pyproject-toml
[tool.mypy]
python_version = "3.12"
# https://mypy.readthedocs.io/en/stable/existing_code.html
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
asyncio_default_fixture_loop_scope = "function"
asyncio_mode = "auto"
