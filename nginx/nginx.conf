user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging settings
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" uht="$upstream_header_time" urt="$upstream_response_time" '
                    'cache_status=$upstream_cache_status';
    
    # Define a map to set $loggable to 0 for health check requests
    map $request_uri $loggable {
        ~/health    0;
        default     1;
    }
    
    access_log /var/log/nginx/access.log main if=$loggable;
    
    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;
    
    # Cache configuration
    proxy_cache_path /var/cache/nginx/proxy_cache 
                    levels=1:2 
                    keys_zone=static_cache:10m 
                    max_size=1g 
                    inactive=60m;
    proxy_cache_path /var/cache/nginx/api_cache 
                    levels=1:2 
                    keys_zone=api_cache:10m 
                    max_size=500m 
                    inactive=10m;
    # External content cache for Hayhooks
    proxy_cache_path /var/cache/nginx/external_cache 
                    levels=1:2 
                    keys_zone=external_cache:20m 
                    max_size=2g 
                    inactive=24h;
    
    # SSL settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_dhparam /etc/nginx/certs/dhparam.pem;
    
    # HTTPS server
    server {
        listen 80;
        root /usr/share/nginx/html;
        index index.html;

        location /health {
            access_log off;
            add_header 'Content-Type' 'text/plain';
            return 200 "healthy\n";
        }
    }
    
    # Include additional configuration files
    include /etc/nginx/conf.d/*.conf;
}
